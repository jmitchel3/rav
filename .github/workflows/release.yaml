name: PyPI Release

on:
  push:
    branches:
      - main
    tags:
      - '**'
    paths:
      - '.github/workflows/**'
      - 'rav/**'
      - 'setup.py'
      - 'pyproject.toml'
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          # Test older Python versions on Ubuntu 20.04
          - python-version: '3.7'
            os: ubuntu-20.04
          - python-version: '3.8'
            os: ubuntu-20.04
          # Test middle Python versions on Ubuntu 22.04
          - python-version: '3.9'
            os: ubuntu-22.04
          - python-version: '3.10'
            os: ubuntu-22.04
          - python-version: '3.11'
            os: ubuntu-22.04
          # Test newer Python versions on Ubuntu 24.04
          - python-version: '3.12'
            os: ubuntu-24.04
          - python-version: '3.13'
            os: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: false

    - name: Install dependencies
      run: uv pip install --system tox tox-uv

    - name: Run tox targets for ${{ matrix.python-version }}
      run: tox run -f py$(echo ${{ matrix.python-version }} | tr -d .)

    - name: Upload coverage data
      uses: actions/upload-artifact@v4
      with:
        name: coverage-data-${{ matrix.python-version }}
        path: '${{ github.workspace }}/.coverage.*'
        include-hidden-files: true
        if-no-files-found: warn

  release:
    if: success() && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-24.04
    environment: release

    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v4
        with:
          enable-cache: false

      - name: Build
        run: uv build

      - uses: pypa/gh-action-pypi-publish@release/v1